{"ast":null,"code":"import _slicedToArray from \"/Users/rand/Code/whatq/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\n\nconst useModal = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isShowing = _useState2[0],\n        setIsShowing = _useState2[1];\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing,\n    toggle\n  };\n};\n\nexport default useModal;","map":{"version":3,"sources":["/Users/rand/Code/whatq/src/components/useModal/useModal.jsx"],"names":["useState","useModal","isShowing","setIsShowing","toggle"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,oBACaD,QAAQ,CAAC,KAAD,CADrB;AAAA;AAAA,QACdE,SADc;AAAA,QACHC,YADG;;AAGrB,WAASC,MAAT,GAAkB;AAChBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,SAAO;AACLA,IAAAA,SADK;AAELE,IAAAA;AAFK,GAAP;AAID,CAXD;;AAaA,eAAeH,QAAf","sourcesContent":["import { useState } from 'react';\n\nconst useModal = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing,\n    toggle,\n  }\n};\n\nexport default useModal;"]},"metadata":{},"sourceType":"module"}