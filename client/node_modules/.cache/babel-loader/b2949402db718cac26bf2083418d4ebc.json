{"ast":null,"code":"var _jsxFileName = \"/Users/rand/Code/whatq/src/components/eventselect/eventselect.jsx\";\nimport React, { Component } from 'react';\n\nclass EventSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: ''\n    };\n  }\n\n  newEvent(e) {\n    this.setState({\n      selected: e.target.value\n    });\n  }\n\n  render() {\n    const existingEvents = this.props.events.map(event => {\n      return React.createElement(\"option\", {\n        value: event,\n        selected: this.state.selected === event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, event);\n    });\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.events);\n  }\n\n}\n\nexport default EventSelect;","map":{"version":3,"sources":["/Users/rand/Code/whatq/src/components/eventselect/eventselect.jsx"],"names":["React","Component","EventSelect","constructor","props","state","selected","newEvent","e","setState","target","value","render","existingEvents","events","map","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,QAAQ,CAACC,CAAD,EAAI;AACV,SAAKC,QAAL,CAAc;AAAEH,MAAAA,QAAQ,EAAEE,CAAC,CAACE,MAAF,CAASC;AAArB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAG,KAAKT,KAAL,CAAWU,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AACtD,aACE;AAAQ,QAAA,KAAK,EAAEA,KAAf;AAAsB,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWC,QAAX,KAAwBU,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgEA,KAAhE,CADF;AAGD,KAJsB,CAAvB;AASA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWU,MADd,CADF;AAKD;;AA5BiC;;AA8BpC,eAAeZ,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass EventSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: '',\n    };\n  }\n\n  newEvent(e) {\n    this.setState({ selected: e.target.value });\n  }\n\n  render() {\n    const existingEvents = this.props.events.map((event) => {\n      return (\n        <option value={event} selected={this.state.selected === event}>{event}</option>\n      )\n    });\n\n\n\n\n    return (\n      <h1>\n        {this.props.events}\n      </h1>\n    );\n  }\n}\nexport default EventSelect;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}